.signature
  - started   = idea.collecting_started || idea.collecting_start_date <= today_date
  - ended     = idea.collecting_ended   || idea.collecting_end_date    < today_date
  - on_going  = started and (not ended)

  - if ENV["ALLOW_SIGNING_MULTIPLE_TIMES"] && current_citizen
    - completed_signature = Signature.where(state: "signed", citizen_id: current_citizen.id, idea_id: idea.id).first
    - if completed_signature
      = t(".already_sent")
  
  - if on_going and idea.collecting_in_service
    .button
      - if current_citizen
        - completed_signature = Signature.where(state: "signed", citizen_id: current_citizen.id, idea_id: idea.id).first
        - if !completed_signature || ENV["ALLOW_SIGNING_MULTIPLE_TIMES"]
          - twenty_mins = (1.0/(24*(60/20)))
          - if session["authenticated_at"] and DateTime.now < session["authenticated_at"]
            - raise "#{DateTime.now} is smaller than found session['authenticated_at'] #{session['authenticated_at']}"
          - elsif shortcut_session_valid?
            = link_to t(".leave_a_message"), signature_idea_service_selection_path(idea.id), class: "btn jaa-btn"
          - else
            = link_to t(".leave_a_support_message"), signature_idea_introduction_path(idea.id), class: "btn jaa-btn"
        - else
          =t(".already_submitted")
      - else
        = link_to t(".login"), signature_idea_introduction_path(idea.id), class: "btn jaa-btn-disabled"

  - if ended
    = t(".collecting_ended")
    .button
      /= link_to "Allekirjoita kannatusilmoitus jÃ¤lkikÃ¤teen", signature_idea_introduction_path(idea.id), class: "btn jaa-btn"
      /- # TODO: Add still supporting button

  .signature-statistics
    .stat-header=t(".stat_header")
    .stat
      = t(".collection_is")
      %b= (on_going ? t(".in_progress") : (not started ? t(".started") : t(".finished")))
    .stat
      = (started ? t(".starts_date") : t(".start_date"))
      = finnishDate(idea.collecting_start_date)
    .stat
      = t(".collection")
      = (ended ? t(".ended") : t(".ends"))
      %b= finnishDate(idea.collecting_end_date)
    .stat
      = t(".collected")
      - dates_collected = (today_date - idea.collecting_start_date + 1).to_i
      = dates_collected
      = t(".days")
    .stat
      = t(".target_amount")
      = idea.target_count
      = t(".pieces")

    .stat-divider
    .stat-header= t(".collected_to_date")
    .stat
      = t(".in_am")
      - signatures_count = idea.signatures.where(state: "signed").count
      %b= signatures_count
      = t(".pieces")
    .stat
      = t(".collected_elsewhere")
      %b= idea.additional_signatures_count
      = t(".pieces")
    .stat
      = t(".collected_total")
      - total_signatures = signatures_count + idea.additional_signatures_count
      %b= total_signatures
      = t(".pieces_estimate")
    .stat
      = t(".collected_about_target")
      - collected_of_target = total_signatures.to_f / idea.target_count * 100.0
      - decimals = [0,(-(Math.log([0.00001,collected_of_target].max)/Math.log(5))+3.3).floor].max
      %b= sprintf("%.#{decimals}f%%", collected_of_target)
    .stat
      = t(".updates")
      = finnishDate(idea.additional_signatures_count_date)
    - additional_urls = (idea.additional_collecting_service_urls || "").split(/!!!/)
    - if additional_urls != []
      .stat
        = t(".rest_of_collection")
        - additional_urls.each do |add_url|
          = link_to add_url, add_url
    .stat
      = t(".weekly_updates")

    .stat-divider
    - signatures_per_day = (total_signatures.to_f) / dates_collected
    - total_days_to_reach_target = (idea.target_count)                    / signatures_per_day
    - still_days_to_reach_target = (idea.target_count - total_signatures) / signatures_per_day
    - if on_going
      .stat
        = t(".avg_collected")
        = sprintf("%.1f", signatures_per_day)
        = t(".pieces_day")
      - if signatures_per_day > 0.0 and total_signatures < idea.target_count
        .stat
          = t(".this_rate")
          = sprintf("%.1f", total_days_to_reach_target)
          = t(".days")
        .stat
          = t(".that_is")
          = sprintf("%.1f", still_days_to_reach_target)
          = t(".days")
        .stat
          = t(".target_day")
          %b= finnishDate(today_date + still_days_to_reach_target)
        .stat
          = t(".at_this_rate")
          %b= ((today_date + still_days_to_reach_target) <= idea.collecting_end_date) ? t(".time_to_collect_ads") : t(".no_time_to_collect_ads")
          = t(".before_the_end")
      - if total_signatures >= idea.target_count
        .stat
          %b= t(".goal_reached")
    - if ended
      .stat
        = t(".support_is_over")
      .stat
        = t(".average_rate")
        = sprintf("%.1f", signatures_per_day)
        = t(".pieces_day")
      .stat
        = t(".estimate_duration")
        = total_days_to_reach_target
        = t(".days")
